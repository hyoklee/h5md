name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libhdf5-dev

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install hdf5

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        python -m pip install -e .

    - name: Run tests with pytest
      run: |
        pytest tests/ --cov=markitdown_hdf5 --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 black isort mypy
        python -m pip install -e .

    - name: Check formatting with black
      run: black --check .

    - name: Check imports with isort
      run: isort --check-only --diff .

    - name: Lint with flake8
      run: flake8 . --count --show-source --statistics

    - name: Type check with mypy
      run: mypy h5md/

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
        if-no-files-found: error
